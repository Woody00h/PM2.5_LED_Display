/******************************************************************************
*  Generated by PSoC Designer 5.4.2946
******************************************************************************/
#include <m8c.h>
// MR address and mask defines
#pragma	ioport	MR_Data_ADDR:	0x0
BYTE			MR_Data_ADDR;
#pragma	ioport	MR_DriveMode_0_ADDR:	0x100
BYTE			MR_DriveMode_0_ADDR;
#pragma	ioport	MR_DriveMode_1_ADDR:	0x101
BYTE			MR_DriveMode_1_ADDR;
#pragma	ioport	MR_DriveMode_2_ADDR:	0x3
BYTE			MR_DriveMode_2_ADDR;
#pragma	ioport	MR_GlobalSelect_ADDR:	0x2
BYTE			MR_GlobalSelect_ADDR;
#pragma	ioport	MR_IntCtrl_0_ADDR:	0x102
BYTE			MR_IntCtrl_0_ADDR;
#pragma	ioport	MR_IntCtrl_1_ADDR:	0x103
BYTE			MR_IntCtrl_1_ADDR;
#pragma	ioport	MR_IntEn_ADDR:	0x1
BYTE			MR_IntEn_ADDR;
#define MR_MASK 0x2
#pragma	ioport	MR_MUXBusCtrl_ADDR:	0x1d8
BYTE			MR_MUXBusCtrl_ADDR;
// Sensor_RST address and mask defines
#pragma	ioport	Sensor_RST_Data_ADDR:	0x0
BYTE			Sensor_RST_Data_ADDR;
#pragma	ioport	Sensor_RST_DriveMode_0_ADDR:	0x100
BYTE			Sensor_RST_DriveMode_0_ADDR;
#pragma	ioport	Sensor_RST_DriveMode_1_ADDR:	0x101
BYTE			Sensor_RST_DriveMode_1_ADDR;
#pragma	ioport	Sensor_RST_DriveMode_2_ADDR:	0x3
BYTE			Sensor_RST_DriveMode_2_ADDR;
#pragma	ioport	Sensor_RST_GlobalSelect_ADDR:	0x2
BYTE			Sensor_RST_GlobalSelect_ADDR;
#pragma	ioport	Sensor_RST_IntCtrl_0_ADDR:	0x102
BYTE			Sensor_RST_IntCtrl_0_ADDR;
#pragma	ioport	Sensor_RST_IntCtrl_1_ADDR:	0x103
BYTE			Sensor_RST_IntCtrl_1_ADDR;
#pragma	ioport	Sensor_RST_IntEn_ADDR:	0x1
BYTE			Sensor_RST_IntEn_ADDR;
#define Sensor_RST_MASK 0x4
#pragma	ioport	Sensor_RST_MUXBusCtrl_ADDR:	0x1d8
BYTE			Sensor_RST_MUXBusCtrl_ADDR;
// DS address and mask defines
#pragma	ioport	DS_Data_ADDR:	0x0
BYTE			DS_Data_ADDR;
#pragma	ioport	DS_DriveMode_0_ADDR:	0x100
BYTE			DS_DriveMode_0_ADDR;
#pragma	ioport	DS_DriveMode_1_ADDR:	0x101
BYTE			DS_DriveMode_1_ADDR;
#pragma	ioport	DS_DriveMode_2_ADDR:	0x3
BYTE			DS_DriveMode_2_ADDR;
#pragma	ioport	DS_GlobalSelect_ADDR:	0x2
BYTE			DS_GlobalSelect_ADDR;
#pragma	ioport	DS_IntCtrl_0_ADDR:	0x102
BYTE			DS_IntCtrl_0_ADDR;
#pragma	ioport	DS_IntCtrl_1_ADDR:	0x103
BYTE			DS_IntCtrl_1_ADDR;
#pragma	ioport	DS_IntEn_ADDR:	0x1
BYTE			DS_IntEn_ADDR;
#define DS_MASK 0x8
#pragma	ioport	DS_MUXBusCtrl_ADDR:	0x1d8
BYTE			DS_MUXBusCtrl_ADDR;
// SHCP address and mask defines
#pragma	ioport	SHCP_Data_ADDR:	0x0
BYTE			SHCP_Data_ADDR;
#pragma	ioport	SHCP_DriveMode_0_ADDR:	0x100
BYTE			SHCP_DriveMode_0_ADDR;
#pragma	ioport	SHCP_DriveMode_1_ADDR:	0x101
BYTE			SHCP_DriveMode_1_ADDR;
#pragma	ioport	SHCP_DriveMode_2_ADDR:	0x3
BYTE			SHCP_DriveMode_2_ADDR;
#pragma	ioport	SHCP_GlobalSelect_ADDR:	0x2
BYTE			SHCP_GlobalSelect_ADDR;
#pragma	ioport	SHCP_IntCtrl_0_ADDR:	0x102
BYTE			SHCP_IntCtrl_0_ADDR;
#pragma	ioport	SHCP_IntCtrl_1_ADDR:	0x103
BYTE			SHCP_IntCtrl_1_ADDR;
#pragma	ioport	SHCP_IntEn_ADDR:	0x1
BYTE			SHCP_IntEn_ADDR;
#define SHCP_MASK 0x20
#pragma	ioport	SHCP_MUXBusCtrl_ADDR:	0x1d8
BYTE			SHCP_MUXBusCtrl_ADDR;
// Sensor_SET address and mask defines
#pragma	ioport	Sensor_SET_Data_ADDR:	0x0
BYTE			Sensor_SET_Data_ADDR;
#pragma	ioport	Sensor_SET_DriveMode_0_ADDR:	0x100
BYTE			Sensor_SET_DriveMode_0_ADDR;
#pragma	ioport	Sensor_SET_DriveMode_1_ADDR:	0x101
BYTE			Sensor_SET_DriveMode_1_ADDR;
#pragma	ioport	Sensor_SET_DriveMode_2_ADDR:	0x3
BYTE			Sensor_SET_DriveMode_2_ADDR;
#pragma	ioport	Sensor_SET_GlobalSelect_ADDR:	0x2
BYTE			Sensor_SET_GlobalSelect_ADDR;
#pragma	ioport	Sensor_SET_IntCtrl_0_ADDR:	0x102
BYTE			Sensor_SET_IntCtrl_0_ADDR;
#pragma	ioport	Sensor_SET_IntCtrl_1_ADDR:	0x103
BYTE			Sensor_SET_IntCtrl_1_ADDR;
#pragma	ioport	Sensor_SET_IntEn_ADDR:	0x1
BYTE			Sensor_SET_IntEn_ADDR;
#define Sensor_SET_MASK 0x40
#pragma	ioport	Sensor_SET_MUXBusCtrl_ADDR:	0x1d8
BYTE			Sensor_SET_MUXBusCtrl_ADDR;
// STCP address and mask defines
#pragma	ioport	STCP_Data_ADDR:	0x0
BYTE			STCP_Data_ADDR;
#pragma	ioport	STCP_DriveMode_0_ADDR:	0x100
BYTE			STCP_DriveMode_0_ADDR;
#pragma	ioport	STCP_DriveMode_1_ADDR:	0x101
BYTE			STCP_DriveMode_1_ADDR;
#pragma	ioport	STCP_DriveMode_2_ADDR:	0x3
BYTE			STCP_DriveMode_2_ADDR;
#pragma	ioport	STCP_GlobalSelect_ADDR:	0x2
BYTE			STCP_GlobalSelect_ADDR;
#pragma	ioport	STCP_IntCtrl_0_ADDR:	0x102
BYTE			STCP_IntCtrl_0_ADDR;
#pragma	ioport	STCP_IntCtrl_1_ADDR:	0x103
BYTE			STCP_IntCtrl_1_ADDR;
#pragma	ioport	STCP_IntEn_ADDR:	0x1
BYTE			STCP_IntEn_ADDR;
#define STCP_MASK 0x80
#pragma	ioport	STCP_MUXBusCtrl_ADDR:	0x1d8
BYTE			STCP_MUXBusCtrl_ADDR;
// SDA address and mask defines
#pragma	ioport	SDA_Data_ADDR:	0x4
BYTE			SDA_Data_ADDR;
#pragma	ioport	SDA_DriveMode_0_ADDR:	0x104
BYTE			SDA_DriveMode_0_ADDR;
#pragma	ioport	SDA_DriveMode_1_ADDR:	0x105
BYTE			SDA_DriveMode_1_ADDR;
#pragma	ioport	SDA_DriveMode_2_ADDR:	0x7
BYTE			SDA_DriveMode_2_ADDR;
#pragma	ioport	SDA_GlobalSelect_ADDR:	0x6
BYTE			SDA_GlobalSelect_ADDR;
#pragma	ioport	SDA_IntCtrl_0_ADDR:	0x106
BYTE			SDA_IntCtrl_0_ADDR;
#pragma	ioport	SDA_IntCtrl_1_ADDR:	0x107
BYTE			SDA_IntCtrl_1_ADDR;
#pragma	ioport	SDA_IntEn_ADDR:	0x5
BYTE			SDA_IntEn_ADDR;
#define SDA_MASK 0x20
#pragma	ioport	SDA_MUXBusCtrl_ADDR:	0x1d9
BYTE			SDA_MUXBusCtrl_ADDR;
// SCL address and mask defines
#pragma	ioport	SCL_Data_ADDR:	0x4
BYTE			SCL_Data_ADDR;
#pragma	ioport	SCL_DriveMode_0_ADDR:	0x104
BYTE			SCL_DriveMode_0_ADDR;
#pragma	ioport	SCL_DriveMode_1_ADDR:	0x105
BYTE			SCL_DriveMode_1_ADDR;
#pragma	ioport	SCL_DriveMode_2_ADDR:	0x7
BYTE			SCL_DriveMode_2_ADDR;
#pragma	ioport	SCL_GlobalSelect_ADDR:	0x6
BYTE			SCL_GlobalSelect_ADDR;
#pragma	ioport	SCL_IntCtrl_0_ADDR:	0x106
BYTE			SCL_IntCtrl_0_ADDR;
#pragma	ioport	SCL_IntCtrl_1_ADDR:	0x107
BYTE			SCL_IntCtrl_1_ADDR;
#pragma	ioport	SCL_IntEn_ADDR:	0x5
BYTE			SCL_IntEn_ADDR;
#define SCL_MASK 0x80
#pragma	ioport	SCL_MUXBusCtrl_ADDR:	0x1d9
BYTE			SCL_MUXBusCtrl_ADDR;
